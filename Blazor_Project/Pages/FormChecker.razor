@page "/passwordchecker"
@using Microsoft.AspNetCore.Components.Forms
@using Blazor_Project.Services
@inject PasswordStrengthService passwordCheck
@inject ILogger<FormChecker> logger;

<h1 class="pass-title">Password strength</h1>
<div class="pass-input-wrapper">
    <label class="pass-label">
        Supports only combination of
        <span @class="-invalid: !IsPasswordValid ? 'pass-invalid' : ''">digits/letters/symbols</span>
    </label>
    <InputText class="pass-input" @bind-Value="inputChecker" placeholder="Enter your password here" />

    <div class="pass-marker"
         @class="-easy: IsPasswordEasy, -medium: IsPasswordMedium, -strong: IsPasswordStrong, -invalid: !IsPasswordValid, -empty: string.IsNullOrEmpty(inputChecker)">
    </div>

    <button @onclick="CheckPassword">Check Password</button>
</div>

@code {
    private string inputChecker = "";
    private bool IsPasswordValid => passwordCheck.IsEasyValidationPassed(inputChecker);
    private bool IsPasswordEasy => passwordCheck.IsEasyValidationPassed(inputChecker);
    private bool IsPasswordMedium => passwordCheck.IsMediumValidationPassed(inputChecker);
    private bool IsPasswordStrong => passwordCheck.IsStrongValidationPassed(inputChecker);

    private void CheckPassword()
    {
        if (string.IsNullOrEmpty(inputChecker) || (!IsPasswordEasy && !IsPasswordMedium && !IsPasswordStrong))
        {
            logger.LogInformation("Password is empty or does not meet the criteria.");
        }
        else if (IsPasswordEasy)
        {
            logger.LogInformation("Password is easy.");
        }
        else if (IsPasswordMedium)
        {
            logger.LogInformation("Password is medium.");
        }
        else if (IsPasswordStrong)
        {
            logger.LogInformation("Password is strong.");
        }
    }
}